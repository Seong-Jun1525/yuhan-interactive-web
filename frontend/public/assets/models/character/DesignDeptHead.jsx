/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 DesignDeptHead.glb 
*/

import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export function Model(props) {
  const group = React.useRef()
  const { scene, animations } = useGLTF('/DesignDeptHead.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" position={[0, 14.076, 0.416]} scale={2.032}>
          <primitive object={nodes.Hip} />
          <primitive object={nodes.Thigh_L} />
          <primitive object={nodes.Thigh_R} />
          <skinnedMesh name="Hair" geometry={nodes.Hair.geometry} material={materials.Hair} skeleton={nodes.Hair.skeleton} />
          <group name="Jaket">
            <skinnedMesh name="Cube003" geometry={nodes.Cube003.geometry} material={materials.Cloth} skeleton={nodes.Cube003.skeleton} />
            <skinnedMesh name="Cube003_1" geometry={nodes.Cube003_1.geometry} material={materials.shirt} skeleton={nodes.Cube003_1.skeleton} />
            <skinnedMesh name="Cube003_2" geometry={nodes.Cube003_2.geometry} material={materials.Shose} skeleton={nodes.Cube003_2.skeleton} />
          </group>
          <group name="SD">
            <skinnedMesh name="Cube004" geometry={nodes.Cube004.geometry} material={materials.Eye} skeleton={nodes.Cube004.skeleton} />
            <skinnedMesh name="Cube004_1" geometry={nodes.Cube004_1.geometry} material={materials.Skin} skeleton={nodes.Cube004_1.skeleton} />
            <skinnedMesh name="Cube004_2" geometry={nodes.Cube004_2.geometry} material={materials.Butten} skeleton={nodes.Cube004_2.skeleton} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/DesignDeptHead.glb')
