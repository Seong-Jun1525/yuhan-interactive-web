/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.4.1 Statue.glb -o Statue.jsx 
*/



import { useBox } from '@react-three/cannon'
import { useGLTF } from '@react-three/drei'
import React, { useEffect } from 'react'
import { SkeletonUtils } from 'three-stdlib'

export function Statue({position, ...props}) {
  const { scene, nodes, materials } = useGLTF('/assets/models/Statue.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const [meshRef, api] = useBox(() => ({
    args: [10, 38, 12],
    type: 'Static',
    mass: 1,
    position,
    ...props
  }))

  useEffect(() => {
    scene.traverse((obj) => {
      if(obj.isObject3D) {
        console.log(obj)
        obj.castShadow = true
        obj.receiveShadow = true
      }
    })
  }, [scene])

  return (
    <group ref={meshRef}>
      <group position={[0,0,0]} scale={1.572}>
        <primitive object={nodes.Hip} />
        <primitive object={nodes.Thigh_L} />
        <primitive object={nodes.Thigh_R} />
        <primitive object={nodes.neutral_bone} />
        <skinnedMesh geometry={nodes.Cube007.geometry} material={materials['E7E500 & Metal (Statue)']} skeleton={nodes.Cube007.skeleton} />
        <skinnedMesh geometry={nodes.Cube007_1.geometry} material={materials['DCE759 & Metal (DEVName, Statue)']} skeleton={nodes.Cube007_1.skeleton} />
        <skinnedMesh geometry={nodes.Cube007_2.geometry} material={materials['96947D(B2(Window Frame),B6(Stone))']} skeleton={nodes.Cube007_2.skeleton} />
      </group>
    </group>
  )
}

useGLTF.preload('/Statue.glb')
